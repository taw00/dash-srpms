.TH DASHD "1" "May 2018" "dashd"
.SH NAME
dashd \- Dash currency server application
.SH SYNOPSIS
dashd [options] <command> [params]
.TP
dashd [options] help <command> \- Get help for a command
.SH DESCRIPTION
ToDo: This is a dated document translated from bitcoin and dash documentation that still needs to be fully updated. It is definitely incomplete and possibly incorrect.

This manual page documents the Dash Core server daemon, dashd, program. Dash is a peer-to-peer; privacy-centric; digital currency, protocol, and platform for payments and dApps.

Dash (Digital Cash) is an open source peer-to-peer cryptocurrency with a strong focus on serving the payments industry. Dash offers a form of money that is portable, inexpensive, divisible and fast. It can be spent securely both online and in person with minimal transaction fees. Dash offers instant transactions (InstantSend), private transactions (PrivateSend), and operates a self-governing and self-funding model. This decentralized governance and budgeting system makes it one of the first ever successful decentralized autonomous organizations (DAO). Dash is also a platform for innovative decentralized crypto-tech.

.SH OPTIONS
.TP
\fB\-conf=\fR<file>
Specify configuration file. Default is $HOME/.dashcore/dash.conf, or if run as system service, then default is /etc/dashcore/dash.conf.
.TP
\fB\-gen\fR
Generate coins (act as a miner)
.TP
\fB\-gen\fR=\fI0\fR
Don't generate coins (don't act as a miner)
.TP
\fB\-min\fR
Start minimized
.TP
\fB\-datadir=\fR<dir>
Specify data directory. Default location is $HOME/.dashcore. Or if run as system service /var/lib/dashcore/.
.TP
\fB\-proxy=\fR<ip:port>
Connect through SOCKS5 proxy
.TP
\fB\-addnode=\fR<ip>
Add a node to connect to
.TP
\fB\-connect=\fR<ip>
Connect only to the specified node
.TP
\fB\-paytxfee=\fR<amt>
Fee per KB to add to transactions you send
.TP
\fB\-server\fR
Accept command line and JSON\-RPC commands
.TP
\fB\-daemon\fR
Run in the background as a daemon and accept commands
.TP
\fB\-testnet\fR
Use the test network
.TP
\fB\-rpcuser=\fR<user>
Username for JSON\-RPC connections
.TP
\fB\-rpcpassword=\fR<pw>
Password for JSON\-RPC connections
.TP
\fB\-rpcport=\fR<port>
Listen for JSON\-RPC connections on <port>
.TP
\fB\-rpcallowip=\fR<ip>
Allow JSON\-RPC connections from specified IP address
.TP
\fB\-rpcconnect=\fR<ip>
Send commands to node running on <ip>
.PP
SSL options: (see the Bitcoin Wiki for SSL setup instructions which should be similar for Dash)
.TP
\fB\-rpcssl\fR=\fI1\fR
Use OpenSSL (https) for JSON\-RPC connections
.TP
\fB\-rpcsslcertificatchainfile=\fR<file.cert>
Server certificate file (default: server.cert)
.TP
\fB\-rpcsslprivatekeyfile=\fR<file.pem>
Server private key (default: server.pem)
.TP
\fB\-rpcsslciphers=\fR<ciphers>
Acceptable ciphers (default: TLSv1+HIGH:\:!SSLv2:\:!aNULL:\:!eNULL:\:!AH:\:!3DES:\:@STRENGTH)
.TP
\-?
This help message
.SH COMMANDS
.TP
\fBbackupwallet 'destination'\fR
Safely copies *wallet.dat* to 'destination', which can be a directory or a path with filename.
.TP
\fBgetaccount 'dashaddress'\fR
Returns the account associated with the given address.
.TP
\fBsetaccount 'dashaddress' ['account']\fR
Sets the ['account'] associated with the given address. ['account'] may be omitted to remove an address from ['account'].
.TP
\fBgetaccountaddress 'account'\fR
Returns a new dash address for 'account'.
.TP
\fBgetaddressesbyaccount 'account'\fR
Returns the list of addresses associated with the given 'account'.
.TP
\fBgetbalance 'account'\fR
Returns the server's available balance, or the balance for 'account'.
.TP
\fBgetblockcount\fR
Returns the number of blocks in the longest block chain.
.TP
\fBgetblocknumber\fR
Returns the block number of the latest block in the longest block chain.
.TP
\fBgetconnectioncount\fR
Returns the number of connections to other nodes.
.TP
\fBgetdifficulty\fR
Returns the proof-of-work difficulty as a multiple of the minimum difficulty.
.TP
\fBgetgenerate\fR
Returns boolean true if server is trying to generate DASH, false otherwise.
.TP
\fBsetgenerate 'generate' ['genproclimit']\fR
Generation is limited to ['genproclimit'] processors, \-1 is unlimited.
.TP
\fBgethashespersec\fR
Returns a recent hashes per second performance measurement while generating.
.TP
\fBgetinfo\fR
Returns an object containing server information.
.TP
\fBgetnewaddress 'account'\fR
Returns a new dash address for receiving payments. If 'account' is specified (recommended), it is added to the address book so payments received with the address will be credited to 'account'.
.TP
\fBgetreceivedbyaccount 'account' ['minconf=1']\fR
Returns the total amount received by addresses associated with 'account' in transactions with at least ['minconf'] confirmations.
.TP
\fBgetreceivedbyaddress 'dashaddress' ['minconf=1']\fR
Returns the total amount received by 'dashaddress' in transactions with at least ['minconf'] confirmations.
.TP
\fBgettransaction 'txid'\fR
Returns information about a specific transaction, given hexadecimal transaction ID.
.TP
\fBgetwork 'data'\fR
If 'data' is specified, tries to solve the block and returns true if it was successful. If 'data' is not specified, returns formatted hash 'data' to work on:

    "midstate" : precomputed hash state after hashing the first half of the data.
    "data"     : block data.
    "hash1"    : formatted hash buffer for second hash.
    "target"   : little endian hash target.
.TP
\fBhelp 'command'\fR
List commands, or get help for a command.
.TP
\fBlistaccounts ['minconf=1']\fR
List accounts and their current balances.
.TP
\fBlistreceivedbyaccount ['minconf=1'] ['includeempty=false']\fR
['minconf'] is the minimum number of confirmations before payments are included. ['includeempty'] whether to include addresses that haven't received any payments. Returns an array of objects containing:

    "account"       : the account of the receiving address.
    "amount"        : total amount received by the address.
    "confirmations" : number of confirmations of the most recent transaction included.
.TP
\fBlistreceivedbyaddress ['minconf=1'] ['includeempty=false']\fR
['minconf'] is the minimum number of confirmations before payments are included. ['includeempty'] whether to include addresses that haven't received any payments. Returns an array of objects containing:

    "address"       : receiving address.
    "account"       : the account of the receiving address.
    "amount"        : total amount received by the address.
    "confirmations" : number of confirmations of the most recent transaction included.
.TP
\fBlisttransactions 'account' ['count=10']\fR
Returns a list of the last ['count'] transactions for 'account' \- for all accounts if 'account' is not specified or is "*". Each entry in the list may contain:

    "category"      : will be generate, send, receive, or move.
    "amount"        : amount of transaction.
    "fee"           : Fee (if any) paid (only for send transactions).
    "confirmations" : number of confirmations (only for generate/send/receive).
    "txid"          : transaction ID (only for generate/send/receive).
    "otheraccount"  : account funds were moved to or from (only for move).
    "message"       : message associated with transaction (only for send).
    "to"            : message-to associated with transaction (only for send).
.TP
\fBmove <'fromaccount'> <'toaccount'> <'amount'> ['minconf=1'] ['comment']\fR
Moves funds between accounts.
.TP
\fBsendfrom* <'account'> <'dashaddress'> <'amount'> ['minconf=1'] ['comment'] ['comment-to']\fR
Sends amount from account's balance to 'dashaddress'. This method will fail if there is less than amount DASH with ['minconf'] confirmations in the account's balance (unless account is the empty-string-named default account; it behaves like the *sendtoaddress* method). Returns transaction ID on success.
.TP
\fBsendtoaddress 'dashaddress' 'amount' ['comment'] ['comment-to']\fR
Sends amount from the server's available balance to 'dashaddress'. amount is a real and is rounded to the nearest 0.01. Returns transaction id on success.
.TP
\fBstop\fR
Stops the dash server.
.TP
\fBvalidateaddress 'dashaddress'\fR
Checks that 'dashaddress' looks like a proper Dash address. Returns an object containing:

    "isvalid" : true or false.
    "ismine"  : true if the address is in the server's wallet.
    "address" : dashaddress.

    *note: ismine and address are only returned if the address is valid.

.SH "SEE ALSO"
dash.conf(5)
.SH AUTHOR
This manual page was written by Todd Warner <t0dd_at_protonmail.com> for the Fedora Project spin of Dash Core. It was adapted from text originally written by Micah Anderson <micah@debian.org>.

